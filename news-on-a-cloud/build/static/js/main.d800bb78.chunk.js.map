{"version":3,"sources":["logo.svg","components/Header.js","components/ArticleCard.js","components/Category.js","components/NewsPreview.js","components/AddCategory.js","components/AddArticle.js","components/Article.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","classes","className","AppBar","position","Toolbar","src","alt","style","height","Typography","variant","marginLeft","marginTop","to","textDecoration","color","float","Tooltip","IconButton","size","fontSize","maxWidth","minWidth","media","ArticleCard","props","article","id","Card","CardActionArea","CardMedia","image","img","CardContent","gutterBottom","component","content","Divider","display","writer","Date","time","toLocaleDateString","Category","Box","name","Grid","container","articles","map","item","lg","paddingBottom","NewsPreview","React","useState","loading","appState","setAppState","categoryFilter","setCategoryFilter","dateFilter","setDateFilter","newsDispalyed","setNewsDisplayed","useEffect","fetch","then","res","json","result","reduce","r","a","category","console","log","backgroundColor","px","justify","alignItems","md","FormControl","fullWidth","marginBottom","InputLabel","Select","labelId","value","onChange","event","target","MenuItem","Object","keys","utils","DateFnsUtils","disableToolbar","format","margin","label","date","filter","articleDate","getFullYear","getMonth","getDate","AddCategory","open","setOpen","categoryName","setCatergoryName","handleClose","Button","onClick","Dialog","onClose","DialogTitle","DialogContent","TextField","required","e","DialogActions","requestOptions","method","headers","body","JSON","stringify","response","data","handleCategoryAdded","autoFocus","Alert","elevation","AddArticle","setLoading","categories","setCategories","useForm","register","control","handleSubmit","categoryAdded","setCategoryAdded","openSuccessSnackBar","setSuccessOpenSnackBar","openFailSnackBar","setFailOpenSnackBar","handleSnackBarClose","reason","py","onSubmit","rowCount","catch","inputRef","as","multiline","rows","Fab","type","aria-label","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","severity","mainFeaturedPost","palette","grey","common","white","backgroundSize","backgroundRepeat","backgroundPosition","overlay","top","bottom","right","left","mainFeaturedPostContent","padding","breakpoints","up","paddingRight","Article","articleID","match","params","setArticle","apiUrl","Paper","backgroundImage","minHeight","p","paragraph","views","App","exact","path","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d800bb78.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <img src=\"/articleImg/wi-fi-512.png\" alt=\".\" style={{height:\"90px\"}}/>\r\n          <Typography variant=\"h3\" className={classes.title} style={{marginLeft: '10px', marginTop:'30px'}}>\r\n            <Link to=\"/\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n              News on a Cloud\r\n            </Link>\r\n          </Typography>\r\n\r\n          <Link to=\"/admin\" style={{ float: \"right\" }}>\r\n            <Tooltip title=\"admin\">\r\n              <IconButton color=\"default\" size=\"medium\">\r\n                <PersonIcon fontSize=\"large\"/>\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AccessTime from \"@material-ui/icons/AccessTime\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 330,\r\n    minWidth: 330\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport default function ArticleCard(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Link to={\"/\" + props.article.id} style={{ textDecoration: \"none\" }}>\r\n      <Card className={classes.root}>\r\n        <CardActionArea>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={\"/articleImg/\" + props.article.img}\r\n            title=\"Contemplative Reptile\"\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {props.article.title}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {props.article.content}\r\n            </Typography>\r\n            <Divider style={{ marginTop: \"5px\" }} />\r\n\r\n            <Typography\r\n              variant=\"caption\"\r\n              color=\"textSecondary\"\r\n              style={{ display: \"flex\", marginTop: \"5px\" }}\r\n            >\r\n              <AccessTime\r\n                fontSize=\"small\"\r\n                color=\"disabled\"\r\n                style={{ marginRight: \"5px\" }}\r\n              />\r\n              {props.article.writer + \", \" + (new Date(props.article.time)).toLocaleDateString('en-GB')}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n    </Link>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ArticleCard from \"./ArticleCard\";\r\nimport { Box, Grid, Divider } from \"@material-ui/core\";\r\n\r\nexport default function Category(props) {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h4\" color=\"primary\">{props.name}</Typography>\r\n      <Grid container>\r\n        {props.articles.map((article) => (\r\n          <Grid item lg={3} style={{ paddingBottom: \"15px\" }}>\r\n            <ArticleCard article={article}/>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <Divider/>\r\n      <br/>\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Category from \"./Category\";\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nexport default function NewsPreview() {\r\n  const [appState, setAppState] = React.useState({\r\n    loading: true,\r\n    articles: null,\r\n  });\r\n  const [categoryFilter, setCategoryFilter] = React.useState(\"\");\r\n  const [dateFilter, setDateFilter] = React.useState(null);\r\n  const [newsDispalyed, setNewsDisplayed] = React.useState(appState.articles);\r\n\r\n  React.useEffect(() => {\r\n    setAppState({ loading: true });\r\n    const apiUrl = `/articles`;\r\n    fetch(apiUrl)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        const result = res.reduce((r, a) => {\r\n          r[a.category] = [...(r[a.category] || []), a];\r\n          return r;\r\n        }, {});\r\n        console.log(result);\r\n        setNewsDisplayed(result);\r\n        setAppState({ loading: false, articles: result });\r\n      });\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    let result = {};\r\n    if (categoryFilter !== \"\") {\r\n      result[categoryFilter] = appState.articles[categoryFilter];\r\n    } else {\r\n      result = appState.articles;\r\n    }\r\n    setNewsDisplayed(result);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [categoryFilter, dateFilter]);\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#efefef\" }}>\r\n      <Box px={4}>\r\n        {appState.loading ? (\r\n          \"loading\"\r\n        ) : (\r\n          <>\r\n            <Grid\r\n              container\r\n              justify=\"flex-end\"\r\n              alignItems=\"flex-end\"\r\n              spacing={2}\r\n            >\r\n              <Grid item md={2}>\r\n                <FormControl fullWidth style={{ marginBottom: \"8px\" }}>\r\n                  <InputLabel id=\"filterCategory\">Category</InputLabel>\r\n                  <Select\r\n                    fullWidth\r\n                    labelId=\"filterCategory\"\r\n                    value={categoryFilter}\r\n                    onChange={(event) => {\r\n                      setCategoryFilter(event.target.value);\r\n                    }}\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>All</em>\r\n                    </MenuItem>\r\n                    {Object.keys(appState.articles).map((category) => (\r\n                      <MenuItem value={category}>{category}</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item md={2}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    margin=\"normal\"\r\n                    label=\"Date\"\r\n                    value={dateFilter}\r\n                    onChange={(date) => {\r\n                      setDateFilter(date);\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>\r\n            </Grid>\r\n            {Object.keys(newsDispalyed).map((category) => (\r\n              <Category\r\n                name={category}\r\n                articles={\r\n                  dateFilter\r\n                    ? newsDispalyed[category].filter((article) => {\r\n                        var articleDate = new Date(article.time);\r\n                        return (\r\n                          articleDate.getFullYear() ===\r\n                            dateFilter.getFullYear() &&\r\n                          articleDate.getMonth() === dateFilter.getMonth() &&\r\n                          articleDate.getDate() === dateFilter.getDate()\r\n                        );\r\n                      })\r\n                    : newsDispalyed[category]\r\n                }\r\n              />\r\n            ))}\r\n          </>\r\n        )}\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nexport default function AddCategory(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [categoryName, setCatergoryName] = React.useState(\"\");\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSave = () => {\r\n      const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({name: categoryName})\r\n    };\r\n    fetch('/category', requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => console.log(data));\r\n    props.handleCategoryAdded();\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button color=\"primary\" onClick={handleClickOpen} style={{float:\"right\"}}>\r\n        Add Category\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle >Add a new category</DialogTitle>\r\n        <DialogContent>\r\n        <TextField\r\n              fullWidth\r\n              required\r\n              value={categoryName}\r\n              name=\"categoryName\"\r\n              label=\"Name\"\r\n              onChange={e=>setCatergoryName(e.target.value)}\r\n            />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSave} color=\"primary\" autoFocus>\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport {\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Fab,\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddCategory from \"./AddCategory\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function AddArticle() {\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [categories, setCategories] = React.useState();\r\n  const { register, control, handleSubmit } = useForm();\r\n  const [categoryAdded, setCategoryAdded] = React.useState(false);\r\n  const [openSuccessSnackBar, setSuccessOpenSnackBar] = React.useState(false);\r\n  const [openFailSnackBar, setFailOpenSnackBar] = React.useState(false);\r\n\r\n  const handleSnackBarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setSuccessOpenSnackBar(false);\r\n    setFailOpenSnackBar(false);\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n      const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data)\r\n    };\r\n    fetch('/articles', requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          console.log(data);\r\n          if(data.rowCount === 1){\r\n            setSuccessOpenSnackBar(true);\r\n          }else{\r\n            setFailOpenSnackBar(true);\r\n          }\r\n        })\r\n        .catch((e)=> setFailOpenSnackBar(true));\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const apiUrl = `/category`;\r\n    fetch(apiUrl)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res);\r\n        setCategories(res);\r\n        setCategoryAdded(false);\r\n        setLoading(false);\r\n      });\r\n  }, [categoryAdded]);\r\n\r\n  function handleCategoryAdded(){\r\n    setCategoryAdded(true);\r\n  }\r\n\r\n  return (\r\n    <Box px={15} py={4}>\r\n      <Typography variant=\"h5\" style={{ marginBottom: \"10px\" }}>\r\n        Add a new Article\r\n      </Typography>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Grid container spacing={2}>\r\n          <Grid item md={6}>\r\n            <TextField\r\n              fullWidth\r\n              required\r\n              variant=\"outlined\"\r\n              name=\"title\"\r\n              label=\"Title\"\r\n              inputRef={register}\r\n            />\r\n          </Grid>\r\n          <Grid item md={6} />\r\n          <Grid item md={6}>\r\n            <TextField\r\n              fullWidth\r\n              required\r\n              variant=\"outlined\"\r\n              name=\"writer\"\r\n              label=\"Writer\"\r\n              inputRef={register}\r\n            />\r\n          </Grid>\r\n          <Grid item md={6}>\r\n            {loading ? (\r\n              \"Loading\"\r\n            ) : (\r\n              <FormControl variant=\"outlined\" fullWidth required>\r\n                <InputLabel id=\"categoryLabel\">Category</InputLabel>\r\n                <Controller\r\n                  as={\r\n                    <Select                      \r\n                      id=\"category\"\r\n                      labelId=\"categoryLabel\"\r\n                      label=\"Catrgory\"\r\n                    >\r\n                      {categories.map((category) => (\r\n                        <MenuItem value={category.id}>{category.name}</MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  }\r\n                  control={control}\r\n                  name=\"category\"\r\n                />\r\n              </FormControl>\r\n            )}\r\n          </Grid>\r\n          <Grid item md={12}>\r\n            <AddCategory handleCategoryAdded={handleCategoryAdded}/>\r\n          </Grid>\r\n          <Grid item md={12}>\r\n            <TextField\r\n              fullWidth\r\n              required\r\n              variant=\"outlined\"\r\n              multiline\r\n              rows={3}\r\n              name=\"content\"\r\n              label=\"Content\"\r\n              inputRef={register}\r\n            />\r\n          </Grid>\r\n          <Grid item md={12}>\r\n            <TextField\r\n              fullWidth\r\n              required\r\n              variant=\"outlined\"\r\n              multiline\r\n              rows={10}\r\n              name=\"body\"\r\n              label=\"Article Body\"\r\n              inputRef={register}\r\n            />\r\n          </Grid>\r\n          <Grid item md={12}>\r\n            <Fab\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n              style={{ float: \"right\" }}\r\n            >\r\n              <AddIcon />\r\n            </Fab>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n          }}\r\n          open={openSuccessSnackBar}\r\n          autoHideDuration={6000}\r\n          onClose={handleSnackBarClose}\r\n        >\r\n          <Alert onClose={handleSnackBarClose} severity=\"success\">\r\n            Added article successfully\r\n          </Alert>\r\n        </Snackbar>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n          }}\r\n          open={openFailSnackBar}\r\n          autoHideDuration={6000}\r\n          onClose={handleSnackBarClose}\r\n        >\r\n          <Alert onClose={handleSnackBarClose} severity=\"error\">\r\n            Somthing went wrong, Please try again\r\n          </Alert>\r\n        </Snackbar>\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport AccessTime from \"@material-ui/icons/AccessTime\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainFeaturedPost: {\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.grey[800],\r\n    color: theme.palette.common.white,\r\n    backgroundSize: \"cover\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  overlay: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    left: 0,\r\n    backgroundColor: \"rgba(0,0,0,.6)\",\r\n  },\r\n  mainFeaturedPostContent: {\r\n    position: \"relative\",\r\n    padding: theme.spacing(3),\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      padding: theme.spacing(3),\r\n      paddingRight: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Article(props) {\r\n  const classes = useStyles();\r\n  const articleID = props.match.params.id;\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [article, setArticle] = React.useState();\r\n\r\n  React.useEffect(() => {\r\n    const apiUrl = `/articles/${articleID}`;\r\n    fetch(apiUrl)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res);\r\n        setArticle(res[0]);\r\n        setLoading(false)\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      {loading? \"Loading\" : (<>\r\n      <Paper\r\n        className={classes.mainFeaturedPost}\r\n        style={{\r\n          backgroundImage: `url(articleImg/${article.img})`,\r\n          minHeight: \"300px\",\r\n        }}\r\n      >\r\n        {/* Increase the priority of the hero background image */}\r\n        {\r\n          <img\r\n            style={{ display: \"none\" }}\r\n            src={\"articleImg/\" + article.img}\r\n            alt={articleID}\r\n          />\r\n        }\r\n        <div className={classes.overlay} />\r\n        <Grid container style={{ position: \"absolute\", bottom: \"0\" }}>\r\n          <Grid item md={6}>\r\n            <div className={classes.mainFeaturedPostContent}>\r\n              <Typography\r\n                component=\"h1\"\r\n                variant=\"h3\"\r\n                color=\"inherit\"\r\n                gutterBottom\r\n              >\r\n                {article.title}\r\n              </Typography>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      <Box p={4}>\r\n        <Grid container>\r\n          <Grid item lg={12}>\r\n            <Typography variant=\"h6\" paragraph>\r\n              {article.content}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography\r\n              variant=\"caption\"\r\n              color=\"textSecondary\"\r\n              style={{ display: \"flex\", marginRight: \"15px\" }}\r\n            >\r\n              <AccessTime\r\n                fontSize=\"small\"\r\n                color=\"disabled\"\r\n                style={{ marginRight: \"5px\" }}\r\n              />\r\n              {(new Date(article.time)).toLocaleDateString('en-GB')}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item >\r\n            <Typography\r\n              variant=\"caption\"\r\n              color=\"textSecondary\"\r\n              style={{ display: \"flex\", marginRight: \"15px\"}}\r\n            >\r\n              <CreateIcon\r\n                fontSize=\"small\"\r\n                color=\"disabled\"\r\n                style={{ marginRight: \"5px\" }}\r\n              />\r\n              {article.writer}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item >\r\n            <Typography\r\n              variant=\"caption\"\r\n              color=\"textSecondary\"\r\n              style={{ display: \"flex\",  marginRight: \"15px\" }}\r\n            >\r\n              <VisibilityIcon\r\n                fontSize=\"small\"\r\n                color=\"disabled\"\r\n                style={{ marginRight: \"5px\" }}\r\n              />\r\n              {article.views}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item lg={12} style={{marginTop: \"15px\"}}>\r\n            <Typography variant=\"body1\">{article.body}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Box></>)}\r\n    </Box>\r\n  );\r\n}\r\n\r\nArticle.propTypes = {\r\n  article: PropTypes.object,\r\n};\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header';\nimport NewsPreview from './components/NewsPreview';\nimport AddArticle from './components/AddArticle';\nimport { Route, Switch } from 'react-router-dom';\nimport Article from './components/Article';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>      \n      <Switch>\n        <Route exact path='/' component={NewsPreview}/>\n        <Route path='/admin' component={AddArticle}/>\n        <Route path={\"/:id\"} component={Article} />\n      </Switch>\n    </div>\n\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}